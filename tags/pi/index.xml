<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pi on Saitech</title><link>https://saitech.blog/tags/pi/</link><description>Recent content in Pi on Saitech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://saitech.blog/tags/pi/index.xml" rel="self" type="application/rss+xml"/><item><title>Fix Choppy or Unsupported Videos on Raspberry Pi Using FFmpeg</title><link>https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/</link><pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/</guid><description>&lt;img src="https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/3.png" alt="Featured image of post Fix Choppy or Unsupported Videos on Raspberry Pi Using FFmpeg" /&gt;&lt;p&gt;When I was troubleshooting playback issues on my Raspberry Pi, I realized that many video formats, especially older ones like &lt;code&gt;.avi&lt;/code&gt;, aren&amp;rsquo;t fully supported by default media players. Some files wouldn’t play at all, others had no sound or were stuttering badly.&lt;/p&gt;
&lt;p&gt;After a bit of trial and error, the most reliable solution was to convert the videos to a more modern and compatible format — &lt;code&gt;MP4 with H.264&lt;/code&gt; for video and &lt;code&gt;AAC&lt;/code&gt; for audio.&lt;/p&gt;
&lt;h2 id="usage"&gt;Usage
&lt;/h2&gt;&lt;p&gt;FFmpeg made the process simple. Here’s the command I used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ffmpeg -i input.avi -c:v libx264 -preset slow -crf 23 -c:a aac -b:a 128k output.mp4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="breakdown-of-the-command"&gt;Breakdown of the Command
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ffmpeg: The command-line tool used for processing audio and video&lt;/li&gt;
&lt;li&gt;-i input.avi: Specifies the input file. FFmpeg supports a wide range of formats including .avi, .mkv, .mov, .flv, .mpg, .ts, .webm, .wmv, and more&lt;/li&gt;
&lt;li&gt;-c:v libx264: Uses the H.264 video codec (via the libx264 library)&lt;/li&gt;
&lt;li&gt;-preset slow: A slower encoding preset which produces better compression (smaller file, same quality)&lt;/li&gt;
&lt;li&gt;-crf 23: Constant Rate Factor for quality control — 23 is a good balance between size and quality&lt;/li&gt;
&lt;li&gt;-c:a aac: Uses the AAC audio codec&lt;/li&gt;
&lt;li&gt;-b:a 128k: Sets audio bitrate to 128kbps&lt;/li&gt;
&lt;li&gt;output.mp4: The output file name&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="why-convert-to-mp4"&gt;Why Convert to MP4?
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Compatibility: MP4 with H.264/AAC is supported by nearly all devices and browsers.&lt;/li&gt;
&lt;li&gt;Efficiency: Better compression than older AVI formats.&lt;/li&gt;
&lt;li&gt;Smaller file size with the same perceptual quality.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="gui-options-for-ffmpeg"&gt;GUI Options for FFmpeg
&lt;/h2&gt;&lt;p&gt;There are many graphical user interfaces (GUIs) available for FFmpeg, but personally, I chose the lightweight QWinFF, so I&amp;rsquo;ll just mention it here briefly.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/2.png"
width="1051"
height="469"
srcset="https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/2_hu_7d4500780db3d01e.png 480w, https://saitech.blog/p/fix-choppy-or-unsupported-videos-on-raspberry-pi-using-ffmpeg/2_hu_fcdedc1555da9274.png 1024w"
loading="lazy"
alt="QWINFF"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="537px"
&gt;&lt;/p&gt;
&lt;p&gt;Installation on Arch Linux:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;yay -S qwinff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item></channel></rss>