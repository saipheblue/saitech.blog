<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASCII on Saitech</title><link>https://saitech.blog/tags/ascii/</link><description>Recent content in ASCII on Saitech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 10 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://saitech.blog/tags/ascii/index.xml" rel="self" type="application/rss+xml"/><item><title>Converting Image to ASCII</title><link>https://saitech.blog/p/converting-image-to-ascii/</link><pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/converting-image-to-ascii/</guid><description>&lt;img src="https://saitech.blog/p/converting-image-to-ascii/33.png" alt="Featured image of post Converting Image to ASCII" /&gt;&lt;p&gt;Simple local guide on how to install a program to convert images to ASCII art.&lt;/p&gt;
&lt;p&gt;You can find all instructions here.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Github Repository:&lt;/b&gt; &lt;b&gt;🔗 &lt;a class="link" href="https://github.com/Hugana/p2ascii" target="_blank" rel="noopener"
&gt;https://github.com/Hugana/p2ascii&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation
&lt;/h2&gt;&lt;p&gt;On my machine, Python did not allow installing packages normally, so I had to create a virtual environment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Do not forget to change your username (YourUsername) in these commands&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;python -m venv /home/YourUsername/yourenv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then I activated it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;source /home/YourUsername/yourenv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;And installed dependencies via pip:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pip install opencv-python numpy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Now, just navigate to the folder where your image is and run these two commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;span class="lnt"&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;source /home/YourUsername/yourenv/bin/activate
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/usr/bin/p2ascii cc2cimage name_of_your_image.jpg auto
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id="examples"&gt;Examples
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://saitech.blog/p/converting-image-to-ascii/2.jpg"
width="1920"
height="1080"
srcset="https://saitech.blog/p/converting-image-to-ascii/2_hu_3730400725d7947d.jpg 480w, https://saitech.blog/p/converting-image-to-ascii/2_hu_4adea7c24c88cca0.jpg 1024w"
loading="lazy"
alt="Original"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt; &lt;img src="https://saitech.blog/p/converting-image-to-ascii/22.png"
width="1920"
height="1080"
srcset="https://saitech.blog/p/converting-image-to-ascii/22_hu_badd32d385f105cc.png 480w, https://saitech.blog/p/converting-image-to-ascii/22_hu_aa542e84a0390eb3.png 1024w"
loading="lazy"
alt="cc2cimage auto"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://saitech.blog/p/converting-image-to-ascii/3.jpg"
width="1600"
height="900"
srcset="https://saitech.blog/p/converting-image-to-ascii/3_hu_eb2d8c692d97dab.jpg 480w, https://saitech.blog/p/converting-image-to-ascii/3_hu_dd28c7f2dfbecb19.jpg 1024w"
loading="lazy"
alt="Original"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt; &lt;img src="https://saitech.blog/p/converting-image-to-ascii/33.png"
width="1600"
height="900"
srcset="https://saitech.blog/p/converting-image-to-ascii/33_hu_9f064a4decf38211.png 480w, https://saitech.blog/p/converting-image-to-ascii/33_hu_9320a1e8e0433fd1.png 1024w"
loading="lazy"
alt="cc2cimage auto"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://saitech.blog/p/converting-image-to-ascii/1.jpg"
width="630"
height="995"
srcset="https://saitech.blog/p/converting-image-to-ascii/1_hu_b096f3b5d33b575d.jpg 480w, https://saitech.blog/p/converting-image-to-ascii/1_hu_fdb4ba75f9480e63.jpg 1024w"
loading="lazy"
alt="Original"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="151px"
&gt; &lt;img src="https://saitech.blog/p/converting-image-to-ascii/10.png"
width="630"
height="995"
srcset="https://saitech.blog/p/converting-image-to-ascii/10_hu_2cd4a5d27e94a4df.png 480w, https://saitech.blog/p/converting-image-to-ascii/10_hu_a28426422b372173.png 1024w"
loading="lazy"
alt="Treshold 10"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="151px"
&gt; &lt;img src="https://saitech.blog/p/converting-image-to-ascii/120.png"
width="630"
height="995"
srcset="https://saitech.blog/p/converting-image-to-ascii/120_hu_9e5df42bdfbfbfed.png 480w, https://saitech.blog/p/converting-image-to-ascii/120_hu_aede66f75b4b594a.png 1024w"
loading="lazy"
alt="Treshold 120"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="151px"
&gt; &lt;img src="https://saitech.blog/p/converting-image-to-ascii/250.png"
width="630"
height="995"
srcset="https://saitech.blog/p/converting-image-to-ascii/250_hu_8a30d20d8da750fa.png 480w, https://saitech.blog/p/converting-image-to-ascii/250_hu_9b8ba222e33fdf10.png 1024w"
loading="lazy"
alt="Treshold 250"
class="gallery-image"
data-flex-grow="63"
data-flex-basis="151px"
&gt;&lt;/p&gt;
&lt;h2 id="usage-taken-from-github"&gt;Usage taken from Github
&lt;/h2&gt;&lt;p&gt;I know it’s a bit lazy, but I want to save this here for myself.&lt;/p&gt;
&lt;h3 id="simple-conversion-no-edge-detection"&gt;Simple Conversion (No Edge Detection)
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sc2image &amp;lt;img&amp;gt; [--transparent] Convert image to ASCII image
sc2text &amp;lt;img&amp;gt; Convert image to ASCII text (stdout)
sc2cimage &amp;lt;img&amp;gt; [--transparent] Colored ASCII image
sc2ctext &amp;lt;img&amp;gt; Colored ASCII text (stdout)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="complex-conversion-with-edge-detection"&gt;Complex Conversion (With Edge Detection)
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;cc2image &amp;lt;img&amp;gt; &amp;lt;thresh&amp;gt; [--transparent] ASCII image using edge orientation
cc2text &amp;lt;img&amp;gt; &amp;lt;thresh&amp;gt; ASCII text with edge symbols (stdout)
cc2cimage &amp;lt;img&amp;gt; &amp;lt;thresh&amp;gt; [--transparent] Colored ASCII image with edge awareness
cc2ctext &amp;lt;img&amp;gt; &amp;lt;thresh&amp;gt; Colored ASCII text with edge symbols
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="threshold-parameter-"&gt;Threshold Parameter ()
&lt;/h3&gt;&lt;p&gt;Used in complex conversion to control edge sensitivity based on gradient magnitude.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;auto: Automatically computes threshold as the 90th percentile of non-zero magnitudes:
0–255: Manual threshold.
Higher = fewer edges (only strong ones)
Lower = more edges (fine details)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="transparency-mode-transparent"&gt;Transparency Mode (&amp;ndash;transparent)
&lt;/h3&gt;&lt;p&gt;When included, the output ASCII image will have a transparent background, displaying only the characters. This option is applicable to image output commands: sc2image, sc2cimage, cc2image, and cc2cimage.&lt;/p&gt;</description></item><item><title>Custom Screenfetch</title><link>https://saitech.blog/p/custom-screenfetch/</link><pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/custom-screenfetch/</guid><description>&lt;img src="https://saitech.blog/p/custom-screenfetch/3.png" alt="Featured image of post Custom Screenfetch" /&gt;&lt;p&gt;Quick tip for Arch users who like to tweak their screenfetch looks.&lt;/p&gt;
&lt;h2 id="installing-screenfetch-on-arch"&gt;Installing Screenfetch on Arch
&lt;/h2&gt;&lt;p&gt;Just pop this in your terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo pacman -S screenfetch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then run it with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;screenfetch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;It’ll show your system info with a cool ASCII logo based on your distro.&lt;/p&gt;
&lt;h2 id="customising-the-logo"&gt;Customising the Logo
&lt;/h2&gt;&lt;p&gt;Want to swap out the default logo for something else? Maybe you&amp;rsquo;re using a WM or just want different vibes.&lt;/p&gt;
&lt;p&gt;The script is located here:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/bin/screenfetch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open it with your editor of choice:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo nano /usr/bin/screenfetch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Scroll down or search (Ctrl + W) for your distro&amp;rsquo;s name. For example, search for:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;Arch Linux&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Change the ASCII logo under that section to whatever you want. You can grab art from other distros or draw your own.&lt;/p&gt;
&lt;p&gt;This isn’t the “official” way to theme screenfetch, but it works. Just be careful when editing system files.&lt;/p&gt;
&lt;h2 id="ascii-art-website"&gt;ASCII art website
&lt;/h2&gt;&lt;p&gt;Check out this site for cool ASCII art you can use: &lt;b&gt;&lt;a class="link" href="https://emojicombos.com/" target="_blank" rel="noopener"
&gt;emojicombos.com&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;</description></item></channel></rss>