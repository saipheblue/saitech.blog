<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Launcher on Saitech</title><link>https://saitech.blog/tags/app-launcher/</link><description>Recent content in App Launcher on Saitech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://saitech.blog/tags/app-launcher/index.xml" rel="self" type="application/rss+xml"/><item><title>LSP cluttering your app launcher?</title><link>https://saitech.blog/p/lsp-cluttering-your-app-launcher/</link><pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/lsp-cluttering-your-app-launcher/</guid><description>&lt;img src="https://saitech.blog/p/lsp-cluttering-your-app-launcher/2.png" alt="Featured image of post LSP cluttering your app launcher?" />&lt;h2 id="the-problem">The Problem
&lt;/h2>&lt;p>EasyEffects, the tool I use as a sound equalizer (see one of my previous posts), requires LSP (Linux Studio Plugins Project). It used to include these plugins, but after a recent update, I had to install them separately, and my app launcher rewarded me with 120 LSP icons.&lt;/p>
&lt;p>You can find them in:&lt;/p>
&lt;p>&lt;code>🗂️ /usr/share/applications/&lt;/code>&lt;/p>
&lt;h2 id="solution">Solution
&lt;/h2>&lt;p>I initially found a solution in this: &lt;b>&lt;a class="link" href="https://www.reddit.com/r/linux4noobs/comments/g40e3a/comment/fo2y3bi/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3" target="_blank" rel="noopener"
>reddit comment&lt;/a>&lt;/b>&lt;/p>
&lt;p>Unfortunately, it didn&amp;rsquo;t work for me because just adding &lt;code>Hidden=true&lt;/code> is not valid &lt;code>.desktop&lt;/code> file on Arch Linux.&lt;/p>
&lt;p>So I slightly modified the script shared by user &amp;ldquo;mthqwork&amp;rdquo;:&lt;/p>
&lt;p>First, create a temporary file with the minimal valid &lt;code>.desktop&lt;/code> content:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">echo -e &amp;#34;[Desktop Entry]\nType=Application\nName=LSP Plugin (Hidden)\nExec=true\nHidden=true&amp;#34; &amp;gt; /tmp/1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then, for each LSP plugin file, it creates a corresponding user-level &lt;code>.desktop&lt;/code> file with the &lt;code>Hidden&lt;/code> flag, while ensuring it remains valid:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">find /usr -name &amp;#34;lsp_plugdesktop&amp;#34; 2&amp;gt;/dev/null | cut -f 5 -d &amp;#39;/&amp;#39; | xargs -I {} cp /tmp/1 ~/.local/share/applications/{}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The point is that by creating &lt;strong>user-specific desktop files in&lt;/strong>: &lt;code>🗂️ .local/share/applications/&lt;/code>their settings take priority, allowing you to hide them cleanly from your app launcher.&lt;/p>
&lt;p>&lt;img src="https://saitech.blog/p/lsp-cluttering-your-app-launcher/1.png"
width="1261"
height="761"
srcset="https://saitech.blog/p/lsp-cluttering-your-app-launcher/1_hu_cb169ad5a5b0df73.png 480w, https://saitech.blog/p/lsp-cluttering-your-app-launcher/1_hu_3b5797020324521.png 1024w"
loading="lazy"
alt="Clean app launcher"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="397px"
>&lt;/p></description></item><item><title>Desktop Files</title><link>https://saitech.blog/p/desktop-files/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/desktop-files/</guid><description>&lt;img src="https://saitech.blog/p/desktop-files/1.png" alt="Featured image of post Desktop Files" />&lt;p>Whenever I update apps like Godot manually, the &lt;code>app launcher&lt;/code> might still point to the old version. I just open the relevant &lt;code>.desktop&lt;/code> file and update the &lt;code>Exec=&lt;/code> path to the new binary.&lt;/p>
&lt;ul>
&lt;li>🗂️ ~/.local/share/applications/&lt;/li>
&lt;/ul>
&lt;p>It’s a small thing, but it keeps the app launcher clean and avoids confusion. Easy to forget, so this post is my personal breadcrumb.&lt;/p>
&lt;p>If you use the AUR (&lt;code>godot-bin&lt;/code> or similar), you can automate updates with an AUR helper like &lt;code>yay&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yay -Syu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>AUR godot isntall:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yay -S godot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So I&amp;rsquo;m considering migrating to the AUR version of Godot..&lt;/p></description></item></channel></rss>