<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>App Launcher on Saitech</title><link>https://saitech.blog/tags/app-launcher/</link><description>Recent content in App Launcher on Saitech</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 06 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://saitech.blog/tags/app-launcher/index.xml" rel="self" type="application/rss+xml"/><item><title>LSP cluttering your app launcher?</title><link>https://saitech.blog/p/lsp-cluttering-your-app-launcher/</link><pubDate>Sun, 06 Jul 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/lsp-cluttering-your-app-launcher/</guid><description>&lt;img src="https://saitech.blog/p/lsp-cluttering-your-app-launcher/2.png" alt="Featured image of post LSP cluttering your app launcher?" /&gt;&lt;h2 id="the-problem"&gt;The Problem
&lt;/h2&gt;&lt;p&gt;EasyEffects, the tool I use as a sound equalizer (see one of my previous posts), requires LSP (Linux Studio Plugins Project). It used to include these plugins, but after a recent update, I had to install them separately, and my app launcher rewarded me with 120 LSP icons.&lt;/p&gt;
&lt;p&gt;You can find them in:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;üóÇÔ∏è /usr/share/applications/&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="solution"&gt;Solution
&lt;/h2&gt;&lt;p&gt;I initially found a solution in this: &lt;b&gt;&lt;a class="link" href="https://www.reddit.com/r/linux4noobs/comments/g40e3a/comment/fo2y3bi/?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3" target="_blank" rel="noopener"
&gt;reddit comment&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, it didn&amp;rsquo;t work for me because just adding &lt;code&gt;Hidden=true&lt;/code&gt; is not valid &lt;code&gt;.desktop&lt;/code&gt; file on Arch Linux.&lt;/p&gt;
&lt;p&gt;So I slightly modified the script shared by user &amp;ldquo;mthqwork&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;First, create a temporary file with the minimal valid &lt;code&gt;.desktop&lt;/code&gt; content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;echo -e &amp;#34;[Desktop Entry]\nType=Application\nName=LSP Plugin (Hidden)\nExec=true\nHidden=true&amp;#34; &amp;gt; /tmp/1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then, for each LSP plugin file, it creates a corresponding user-level &lt;code&gt;.desktop&lt;/code&gt; file with the &lt;code&gt;Hidden&lt;/code&gt; flag, while ensuring it remains valid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;find /usr -name &amp;#34;lsp_plugdesktop&amp;#34; 2&amp;gt;/dev/null | cut -f 5 -d &amp;#39;/&amp;#39; | xargs -I {} cp /tmp/1 ~/.local/share/applications/{}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The point is that by creating &lt;strong&gt;user-specific desktop files in&lt;/strong&gt;: &lt;code&gt;üóÇÔ∏è .local/share/applications/&lt;/code&gt;their settings take priority, allowing you to hide them cleanly from your app launcher.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://saitech.blog/p/lsp-cluttering-your-app-launcher/1.png"
width="1261"
height="761"
srcset="https://saitech.blog/p/lsp-cluttering-your-app-launcher/1_hu_cb169ad5a5b0df73.png 480w, https://saitech.blog/p/lsp-cluttering-your-app-launcher/1_hu_3b5797020324521.png 1024w"
loading="lazy"
alt="Clean app launcher"
class="gallery-image"
data-flex-grow="165"
data-flex-basis="397px"
&gt;&lt;/p&gt;</description></item><item><title>Desktop Files</title><link>https://saitech.blog/p/desktop-files/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://saitech.blog/p/desktop-files/</guid><description>&lt;img src="https://saitech.blog/p/desktop-files/1.png" alt="Featured image of post Desktop Files" /&gt;&lt;p&gt;Whenever I update apps like Godot manually, the &lt;code&gt;app launcher&lt;/code&gt; might still point to the old version. I just open the relevant &lt;code&gt;.desktop&lt;/code&gt; file and update the &lt;code&gt;Exec=&lt;/code&gt; path to the new binary.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üóÇÔ∏è ~/.local/share/applications/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It‚Äôs a small thing, but it keeps the app launcher clean and avoids confusion. Easy to forget, so this post is my personal breadcrumb.&lt;/p&gt;
&lt;p&gt;If you use the AUR (&lt;code&gt;godot-bin&lt;/code&gt; or similar), you can automate updates with an AUR helper like &lt;code&gt;yay&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;yay -Syu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;AUR godot isntall:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;div class="chroma"&gt;
&lt;table class="lntable"&gt;&lt;tr&gt;&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code&gt;&lt;span class="lnt"&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class="lntd"&gt;
&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;yay -S godot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;So I&amp;rsquo;m considering migrating to the AUR version of Godot..&lt;/p&gt;</description></item></channel></rss>